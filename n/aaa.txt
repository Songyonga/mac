




논어의 표면적 어휘 분석과 한문학 활용 방안



2024. 11


송용아 (lsmu76@naver.com)

목차
그림 목차	iii
표 목차	iv
1.	서론	1
2.	관련 연구	2
2.1 엔그램 분석	2
2.2	데이터 시각화	3
3.	논어의 엔그램 분석	4
3.1 1음절 분석	5
3.2 2음절어 분석	7
3.3 3음절어 분석	10
참고 문헌	12


 
그림 목차
그림 1. D3js.org의 네트워크 다이어그램 예제	3
그림 2. 논어의 엔그램 분석 화면	5
그림 3. 글자별 출현 빈도	6
그림 4. 1음절어 상위 10개 한자의 분포	7
그림 5. 2음절어 분포 상위 6개	9
그림 6. 가장 많이 등장하는 인물 분포	10
그림 7. N子曰 구조	12
그림 8. 3음절 인물 상위	12

 
표 목차
표 1. 음절별 엔그램 분석 방법	2

 
 
	서론
인구가 급격히 감소함에 따라 학령 인구 또한 큰 변화가 있다. AI나 컴퓨터공학과 같은 인기 학과는 공부하는 학생들이 많은 반면, 인문학은 위기라 할 만큼 심각한 학문적 영향을 받고 있는 실정이다. 이러한 학령 인구 변화에 따라 인문학에 컴퓨터를 이용한 분석을 적용하면, 조금이나마 이러한 문제를 해결할 수 있을 것으로 보인다. 이를 위해 최근 디지털인문학이라는 분야가 새롭게 출현하였고, 다양한 형태의 인문학 분석을 컴퓨터로 해결하는 시도가 있다.
가장 대표적인 예가 엔그램(N-gram) 분석과 같은 표면적 데이터 분포 분석이다. 표음문자인 한글과 달리 한문은 표의문자로, 사전화하기 어려운 특성을 가지고 있어, 어휘의 출현빈도를 파악하고, 정확한 통계정보 추출을 통해 자료의 특성을 파악하려는 시도이다. 또, 무수히 많은 분석된 자료를 직관적으로 파악하기 위해 데이터시각화 기술이 인문학에 데이터분석에 사용되고 있다.
본 논문에서는 한문학에 입문할 때 가장 기초가 되는 논어를 엔그램 분석을 통해 표면적 어휘의 특성을 파악하고 지금까지 알려지지 않은 다양한 통계를 추출해 봄으로 써 향후 컴퓨터를 활용해 한문학 발전의 방향을 제시하는 것을 목적으로 한다. 음절별 데이터 분석을 통해 통계정보를 추출하고, 시각화하여 도출된 결과가 최근 사회적 현상으로 까지 번진 chatGPT를 한문학에 활용할 때 어떤 문제가 있는지 검토한다.
본 논문의 구성은 다음과 같다.
2장에서는 최근 디지털인문학과 관련된 연구에 대해 살펴본다. 3장에서는 엔그램 분석을 논어에 시도하는 과정과 결과에 대해 상세히 기술한다. 4장에서는 추출된 데이터를 직관적으로 확인하기 위한 데이터 시각화에 대해 기술한다. 결론 및 향후 과제는 5장에서 기술한다.
	관련 연구
2.1 엔그램 분석
엔그램 분석은 표면적인 데이터 분포를 파악하기 위해 가장 기초적인 형태의 분석이지만 모든 경우의 수를 계산하기 때문에 매우 강력한 기능을 한다. 예를 들어 “충남대학교”라는 단어가 있을 때 한문은 사전을 활용하는데 한계가 있기 때문에, 모든 음절별로 다음과 같이 구분해 빈도를 파악한다.
표 1. 음절별 엔그램 분석 방법
	엔그램의 모든 경우	갯수
1음절	충, 남, 대, 학, 교	5
2음절	충남, 남대, 대학, 학교	4
3음절	충남대, 남대학, 대학교	3
4음절	충남대학, 남대학교	2
5음절	충남대학교	1

표 1에서 보는 바와 같이 “충남대학교”라는 단어는 1음절부터 5음절까지 모든 경우의 수에 따라 구분되고, 이 단어가 다른 데이터의 출현회수에 따라 의미있는 단어와 무의미한 단어를 구분하게 된다. 예를 들어 “충남”이나 “대학”, “대학교”는 자주 출현하는 반면, “남대”, “남대학” 등은 출현 빈도가 적기 때문에 단어로 보기 어려울 것으로 판단된다. N음절의 단어를 분석하면 
∑_(k=1)^n▒k  =  (n(n+1))/2
과 같다. 위의 “충남대학교”는 5음절이기 때문에 5 * 6 / 2 = 15개가 된다.
	데이터 시각화
데이터 시각화는 MS-Excel의 차트 만들기와 같이 표로 되어 있는 자료를 시각적으로 표현함으로써 데이터를 직관적으로 파악하기 위한 방법이다. 웹에서는 구글차트나 D3.JS와 같은 다양한 시각적인 방법들이 활용되고 있다. 본 논문에서 다루는 데이터 분포는 엑셀, 구글차트 등에서 제공하는 파이차트나 막대 그래프 등이 활용되고, 논어 등장하는 데이터의 관계를 파악하기 위해서는 D3.JS의 네트워크 다이어그램이 사용될 수 있다.
 
그림 1. D3js.org의 네트워크 다이어그램 예제
그림 1에서 원으로 표시된 자료를 노드(node)라 하고 일반적인 데이터에 해당한다. 논어의 분석에서는 1음절~4음절어가 해당하고 원 대신 텍스트를 사용할 수 있다. 노드와 노드를 연결하는 직선은 링크(link)라 하고 두 노드 사이의 관계를 나타낸다. 예를 표 1에 사용된 자료를 활용해 예를 들면 “충”, “남”, “충남” 등은 노드에 해당하고 “충”-“충남”은 음절확장이 가능한 관계이므로 직선으로 연결할 수 있다.
	논어의 엔그램 분석
한학 입문자를 위해 필수 과정인 논어의 학습 효과적으로 하기 위한 한자 외우는 순서나 학습할 장의 순서를 데이터에 기반해 검증하는 간단한 시도를 엔그램 분석으로 시도하고, 이 결과를 시각화할 수 있다. 이를 위해 PHP 기반의 웹 프로그래밍과 검증을 위해 파이썬(Python)을 혼용하여 데이터를 추출하였다.
분석에 앞서 논어 전문을 분석하였는데 여기서 전문의 범위를 명확히 할 필요가 있다. 본 논문에서 다루는 전문의 범위란 ‘學而第一’과 같은 제목을 뺀 본문을 말하며, 제목을 뺀 것과 들어간 것에 대해 분석했을 때 상위항목의 차이가 없기 때문이다. 
어떤 자료를 기초 데이터로 사용했는가 따라 구두점, 쉼표, 물음표, 또는 서적을 표시하는 기호등이 다르다. 이를 위해 데이터의 전처리 과정이 필수이다. 전처리 과정은 정규식(Regular Expression)을 통해 불필요한 한문 텍스트와 공백을 제외한 모든 기호를 제거하여 문장의 공백 단위로 엔그램을 분석을 시도하였다.
한자어나 논어에 등장하는 어휘는 5음절어가 중복되는 경우는 없거나 무의미하다. 논어에 몇 글자가 사용되었는지를 위해 유니그램(엔그램 분석 중 1음절어 분석, uni-gram), 단어를 찾을 수 있는 가능성이 높은 바이그램(엔그램 분석 중 2음절어 분석, bi-gram), 3음절어를 분석하는 트라이그램(tri-gram), 4음절어를 분석하는 4-그램만을 대상으로 한다. 본 논문에서는 엔그램을 이용한 데이터 분석의 관점에서 기술하기 때문에 3음절까지만 기술하도록 한다.
3.1 1음절 분석
1음절은 논어에 사용된 각 낱글자가 얼마나 사용되었는지, 모든 글자의 총 수가 얼마인지를 파악하는 기초 자료이다. 1음절어는 2음절어로 확장해 시각화하는데 활용되기도 한다. 즉 “충”과 “효” 각 두 글자가 있어야 “충효”라는 글자를 만들 수 있다.
 
그림 2. 논어의 엔그램 분석 화면
그림 2는 논어의 엔그램 분석을 시도하는 개발한 프로그램의 화면을 보이고 있다. 그림 2에서 1음절어 분석을 통해 논어에 사용된 모든 글자 수는 15,965개 이고, 그 중 1,359개의 고유 글자의 조합으로 구성된다. 즉 이 말은 1,359글자만 알면 논어를 공부할 수 있음을 의미한다. 그런데 1,300여 글자 중 1회만 출현하는 글자는 약 1/3 (35.4%)을 차지한다. 즉 표면적으로는 800여 글자만 알면 논어를 학습하는데 큰 문제가 없음을 데이터로 확인할 수 있다.
 
그림 3. 글자별 출현 빈도
그림 3은 논어에 출현하는 모든 한자에 대해 글자별 출현 빈도를 도넛 차트로 표현한 그림이다. 이 그림에서 1회만 출현한 글자가 1/3 이상임을 확인할 수 있고, 1~3회는 60%에 해당한다. 즉 500여 글자만 알면 논어를 학습할 준비가 되었다고 판단할 수 있는 결과이다.
1음절 분석결과의 상위 한자들을 보면 1, 2위인 ‘子’, 曰’ 가 압도적으로 많다는 것을 확인할 수 있다. 이를 통해 알 수 있는 점은  첫째, 2그램 분석에서도 나올 단어인 "子曰"이 많다는 것을 증명하는 것으로 논어는 공자의 말씀으로 이루어져 있다는 것을 증명하는 셈이다. 여기서 유의할 점은 "子曰"은 "曾子曰"의 일부이기도 하다는 점이다.
다음으로 많이 등장하는 상위 10개는 그림 4에서 보는 바와 같이 ‘之, 不, 也, 而, 以’처럼 문장에서 어조사 및 접속사로써의 기능이 많이 쓰임을 알 수 있고 ‘其, 人, 者’ 처럼 문장속에서 지칭하는 대명사의 역할을 하는 음절의 출현이 많았음을 알 수 있는 것이다.
 
그림 4. 1음절어 상위 10개 한자의 분포

3.2 2음절어 분석
두번째 분석방법에서는 2음절로 된 유의미한 단어가 무엇이 있는지 살펴볼 수 있다. 1음절 분석에서 보았던 것처럼 ‘子曰’이 454번 등장해 단연 1위임을 알 수 있고, 논어가 공자의 말씀으로 이루어져 있다는 사실이 더 분명해졌다. 여기에서도 “증자왈”도 포함하기 때문에 실제 “공자왈”에 해당하는 “자왈”과 구분하여야 한다. 이는 3음절 분석과 다르게 정규식으로 구분할 수 있는데 공백문자 또는 단어의 첫글자에 “자왈”은 공자를 의미하지만 “다른 한자+자왈”은 공자가 아니다.  정규식을 이용해 “자왈”로 시작하는 단어의 추출은 다음의 두 가지 방법으로 해결할 수 있다.
	^[孔]?子[對]?曰

“^”는 정규식에서 처음을 나타내는 기호이고, [孔]?는 孔이 0 또는 1회 출현, [對]?는 對가 0 또는 1회 출현을 의미한다. 즉 위 정규식은 “자왈”, “공자왈”, “자대왈”, “공자대왈”을 모두 찾아주는 식이다. 이를 전처리과정이나 프로그램으로 확인할 수 있다.
우리가 찾는 공자님 말씀인 “子曰”은 398회 등장한다. 논어에서의 '子曰’은 ‘선생님께서 말씀하시기를’이란 뜻으로 모두 공자를 지칭하기 때문에 실제 공자의 말씀으로 이루어진 것으로 판단할 수 있다. 2위는 107회 등장한 ‘君子’인데 이 결과를 통해 논어란 공자가 ‘君子’에 대한 덕목에 대한 말씀의 기록으로 단순화해 요약할 수 있다. 이를 데이터의 정량적 분석을 통해 검증하였다. 
 2음절 분석에서 또 무엇을 찾아볼 수 있을까? 우선 10회 이상 출현하는 한자가 총101개로 의미가 있을 것으로 예상된다. 이중에서 상위 몇개만 뽑아 살펴보도록 한다.
그림 5에서 보는 바와 같이 상위 단어들을 보면, 孔子(69), 子路(47), 子貢(44), 子夏(23), 子張(23), 曾子(17), 顔淵(15)와 같은 결과를 확인할 수 있는데, 이는 모두 인물이다. 이 인물들을 요약하면 다음과 같이 두 개로 정리할 수 있다.
첫째, 실제 데이터를 통해 ‘孔子’라는 단어가 69회 등장해 2음절중 4위를 차지하고 있음으로 보아 ‘子曰’의 ‘子’가 ‘孔子’를 가리킨다는 것이 많음을 데이터검증으로 유추가 가능해진 것이다.  
 
그림 5. 2음절어 분포 상위 6개
둘쨰, 공자 외 다른 인물들은 공자의 제자를 가리킨다는 것을 알 수 있다. 논어는 공자의 말씀을 제자들과 나눈 것이라고 하는데 그 중 공문십이철 이 많이 등장한다는 것을 확인해 논어에서 제자들의 존재를 데이터로 확인할 수 있다. 하지만 데이터로만으로 2음절어에 등장하는 인물이 논어에 출현하는 인물의 출현빈도와 일치하지 않을 수 있다. 왜냐하면 각 제자들의 이름은 때에 따라 다르게 불리기 때문이다. 예를 들어 안회(顔回)는 성이 顔, 이름이 回, 자가 子淵이며 논어에서 안회를 지칭하는 말은 안회(顔回), 안연(顔淵), 회(回) 이렇게 세가지로 쓰일 수 있기 때문이다.
 결론적으로 큰 데이터지표를 보자면 실제로 孔子(공자)가 많이 등장했다는 것과 공자가 언급했던 제자들의 이름이 자주 2음절 단어로 논어에서 언급되었다는 사실을 확인할 수 있었다. 표면적인 등장인물의 분포는 그림 6에서 확인할 수 있다.
 
그림 6. 가장 많이 등장하는 인물 분포
3.3 3음절어 분석
3음절에서는 인물과 관련된 사실들을 더 자세히 분석할 수 있고, 더 나아가 문법적인 부분도 찾아볼 수 있었다.  본 절에서는 인물 관점과 문법적인 관점의 두 가지 측면에서 살펴보았다.
3.3.1 인물
논어에 등장하는 인물은 크게 공자와 제자로 구분할 수 있다.
첫째, ‘子曰 ‘이 실제로 공자를 지칭하는가? 이다. ‘N子曰’ 구조는 총 56번이며 ‘孔子’ 34번, ‘曾子’ 13번, ‘有子’ 3번, 夫子 2번, 弟子 2번, 康子 1번, 孟子 1번 이다.(그림5) 인물에 관해서는 역시 ‘孔子曰’이 34번으로 제일 많이 등장하며 공자가 말한 말씀이 많다는 것을 증명했다. 2음절어의 ‘子曰’은 454번이 나왔지만 398번이 앞서 말한 2음절 분석을 통해 공자임을 증명했고 나머지 56번 중에 후순위에 나올 ‘曾子曰’와 같은 구조가 존재하기 때문에 앞서 제시한 2음절어의 ‘子曰’이 모두 공자를 가리키진 않는 것이다.  또한 3음절 상위 중 孔子對가 11번 등장하며 ‘曰’뿐만 아니라 말하는 음절은 더 많이 분석이 가능하다. 이부분은 후에 4음절에서 분석에서 자세히 설명하겠다.
 
그림 7. N子曰 구조

둘째, 공자의 제자들 중 상위 인물들의 등장을 살펴보겠다. (그림6)은 3음절 상위분석결과 중에 인물의 이름 뒤에 붙는 ‘曰’과 ‘問’ 두가지(云이나 기타 제외)를 가지고 계산한 수치이다. 데이터를 설명하기전에 분명 ‘2음절 분석에서는 자로가 자공보다 많이 등장했는데 왜 대화는 더 적게 나올까’ 라는 의문을 갖는 사람도 있을 것이다. 이부분에 대해서 짚고 넘어가자면 데이터 분석은 표면적 분석으로 글의 내재되어 있는 모든 면을 정확하게 분석하지 못하는 한계가 분명 존재한다. 그리고 앞서 설명한 2음절과 지금의 3음절에서 인물의 등장 빈도수는 상위 몇명을 추려 보여주고 있는데 데이터의 요지는 인물들의 순위를 가리기 위해서가 아니라 ‘이러한 인물들이 자주 등장했다’ 라는 유의미한 결과로 보기 위함이라는 사실을 인지해야 한다.
 먼저 子貢曰(38번)을 보자. 앞서 2음절 등장인물에서도 상위권이었던 자공은 공자의 공문 십철()의 제자 중 한명으로 뛰어난 언변과 정치적 수완으로 부유했으며 공자를 경제적으로 많이 도와주던 인물이다. 훗날 공자가 세상을 뜨자 다른 제자들은 3년상을 치렀지만 자공만이 6년상을 치렀을 정도로 충직한 제자로도 불린다. 데이터 검증을 통해 공자가 자공과 많은 대화를 나눴다는 것을 알 수 있고 자공이 공자의 충직한 제자였으며 둘의 관계가 깊었다는 사실에 대한 통계적근거로 사용할 수 있다. 인물 분석을 통해 ‘자공’ 이외에도 ‘자로’ ‘자장’ ‘자하’ ‘증자’  공자가 제자들과 대화를 많이 했음을 검증하
 
그림 8. 3음절 인물 상위

3.3.2 문법

3.4 챗GPT와의 결과 비교
최근 생성형 AI의 대표 주자인 챗GPT가 다양한 분야의 학문 연구에 활용되고 있다. 하지만 생성형 AI는 확률 분포 기반의 정보를 추출하기 때문에 같은 질문에 매번 다른 답을 하는 문제가 있다. 또 정확하지 않은 지식에 대해서도 무조건 답을 하려는 할루시네이션 현상을 피할 수 없다. 이를 챗GPT의 논어에 대한 질문으로 확인할 수 있다.
“논어에 등장하는 어휘 중 2음절어 상위 10개의 목록을 요청”하는 질문에 대해 챗GPT의 결과가 그림 9에 있다.
 
그림 9. 챗GPT의 응답 결과
같은 질문을 실제 분석한 그림 5와 전혀 다른 결과를 보여주고 있다. 이는 챗GPT가 다양한 분야에 활용은 되고 있으나 한문학 분야에 바로 사용하기에는 문제가 있음을 단적으로 보여주는 예이다. 본 논문에서 다양한 기술을 이용해 한문학 자료를 분석하는 것이 유용한 것은 사실이지만 직접 통계분석을 시도해야 하는 당위성이기도 하다.
	데이터 시각화
지금까지 엔그램 분석의 결과를 도넛차트나 막대그래프 형태로 확인하였으나, 논어에 등장하는 텍스트를 시각적으로 확인하는 절차는 음절별 데이터 확장을 JSON 형태의 파일로 저장한 후, JSON 데이터를 활용해 관계 그래프(네트워크 다이어그램)으로 표현하는 방법이다. 이를 위해 관련 연구에서 살펴본 JSON 데이터가 필요한데, 모든 음절을 시각화하면 1회만 출현하는 글자까지 표현하기 떄문에 의미도 없고, 시스템에 부담을 야기한다. 이를 위해 5회 이상 출현한 글자에 대해 JSON으로 추출한 결과가 다음과 같다.
{
    "nodes": [
        {   "id": "子",   "total": 972},
        {   "id": "曰",   "total": 759},
        {   "id": "之",   "total": 613},
        {   "id": "不",   "total": 588},
        {   "id": "也",   "total": 534},
               …
{   "id": "如之何其", "total": 5 }
    ],
    "links": [
        {.   "source": "子",   "target": "子曰",    "title": "子曰",  "weight": 454 },
        {.   "source": "曰",   "target": "子曰",    "title": "子曰",  "weight": 454 },
        {.   "source": "君",   "target": "君子",    "title": "君子",  "weight": 107 },
…
{   "source": "如之何",  "target": "如之何其",  "title": "如之何其",  "weight": 5},
        {   "source": "其",  "target": "如之何其",  "title": "如之何其",  "weight": 5}
    ]
}
그림 10. 시각화를 위한 논어 데이터의 JSON 파일 형태

이 결과는 일반적으로 D3JS를 활용해 네트워크 다이어그램으로 표현한다. 그런데 충남대학교 한문학과에서 JSON 파일만 입력되면 자동으로 네트워크 다이어그램으로 시각화하는 도구가 이미 만들어져 있어, 이를 활용해 결과를 확인할 수 있다.
 
그림 11. 논어의 네트워크 다이어그램 시각화 자료
그림 10은 생성된 JSON파일을 이용해 네트워크 다이어그램으로 표현해 시각화한 결과로 최소 5회 이상 출현하는 텍스트에 대한 결과이다. 노드의 색의 농도나 링크의 두께 등을 이용해 데이터의 분포를 직관적으로 확인할 수 있다.
그림 11은 3음절어의 분포를 워드 클라우드로 표현한 모습으로, 출현빈도가 높은 어휘는 크게 표시되어 직관적으로 분포를 확인할 수 있는 또 다른 형태의 시각화 결과를 보여주고 있다.
 
그림 12. 3음절어의 워드클라우드 결과
	결론 및 향후 연구 과제

참고 문헌
[1] 홍길동, 이순신 “문서의 제목의 적고, 출처 정보를 적습니다. 특히 웹사이트의 경우 사라질 수도 있으므로 참고했던 날짜를 함께 기록합니다.”, 출처 정보, 2024.10
[2] 홍길동, 이순신 “문서의 긴 제목 테스트입니다. 문서의 제목이 길어져서 두 줄 이상이 되면 첫 줄 내어쓰기”, 출처 정보, 2024. 10





논어의 표면적 어휘 분석과 한문학 활용 방안



2024. 11


송용아 (lsmu76@naver.com)

목차
그림 목차	iii
표 목차	iv
1.	서론	1
2.	관련 연구	2
2.1 엔그램 분석	2
2.2	데이터 시각화	3
3.	논어의 엔그램 분석	4
3.1 1음절 분석	5
3.2 2음절어 분석	7
3.3 3음절어 분석	10
참고 문헌	12


 
그림 목차
그림 1. D3js.org의 네트워크 다이어그램 예제	3
그림 2. 논어의 엔그램 분석 화면	5
그림 3. 글자별 출현 빈도	6
그림 4. 1음절어 상위 10개 한자의 분포	7
그림 5. 2음절어 분포 상위 6개	9
그림 6. 가장 많이 등장하는 인물 분포	10
그림 7. N子曰 구조	12
그림 8. 3음절 인물 상위	12

 
표 목차
표 1. 음절별 엔그램 분석 방법	2

 
 
	서론
인구가 급격히 감소함에 따라 학령 인구 또한 큰 변화가 있다. AI나 컴퓨터공학과 같은 인기 학과는 공부하는 학생들이 많은 반면, 인문학은 위기라 할 만큼 심각한 학문적 영향을 받고 있는 실정이다. 이러한 학령 인구 변화에 따라 인문학에 컴퓨터를 이용한 분석을 적용하면, 조금이나마 이러한 문제를 해결할 수 있을 것으로 보인다. 이를 위해 최근 디지털인문학이라는 분야가 새롭게 출현하였고, 다양한 형태의 인문학 분석을 컴퓨터로 해결하는 시도가 있다.
가장 대표적인 예가 엔그램(N-gram) 분석과 같은 표면적 데이터 분포 분석이다. 표음문자인 한글과 달리 한문은 표의문자로, 사전화하기 어려운 특성을 가지고 있어, 어휘의 출현빈도를 파악하고, 정확한 통계정보 추출을 통해 자료의 특성을 파악하려는 시도이다. 또, 무수히 많은 분석된 자료를 직관적으로 파악하기 위해 데이터시각화 기술이 인문학에 데이터분석에 사용되고 있다.
본 논문에서는 한문학에 입문할 때 가장 기초가 되는 논어를 엔그램 분석을 통해 표면적 어휘의 특성을 파악하고 지금까지 알려지지 않은 다양한 통계를 추출해 봄으로 써 향후 컴퓨터를 활용해 한문학 발전의 방향을 제시하는 것을 목적으로 한다. 음절별 데이터 분석을 통해 통계정보를 추출하고, 시각화하여 도출된 결과가 최근 사회적 현상으로 까지 번진 chatGPT를 한문학에 활용할 때 어떤 문제가 있는지 검토한다.
본 논문의 구성은 다음과 같다.
2장에서는 최근 디지털인문학과 관련된 연구에 대해 살펴본다. 3장에서는 엔그램 분석을 논어에 시도하는 과정과 결과에 대해 상세히 기술한다. 4장에서는 추출된 데이터를 직관적으로 확인하기 위한 데이터 시각화에 대해 기술한다. 결론 및 향후 과제는 5장에서 기술한다.
	관련 연구
2.1 엔그램 분석
엔그램 분석은 표면적인 데이터 분포를 파악하기 위해 가장 기초적인 형태의 분석이지만 모든 경우의 수를 계산하기 때문에 매우 강력한 기능을 한다. 예를 들어 “충남대학교”라는 단어가 있을 때 한문은 사전을 활용하는데 한계가 있기 때문에, 모든 음절별로 다음과 같이 구분해 빈도를 파악한다.
표 1. 음절별 엔그램 분석 방법
	엔그램의 모든 경우	갯수
1음절	충, 남, 대, 학, 교	5
2음절	충남, 남대, 대학, 학교	4
3음절	충남대, 남대학, 대학교	3
4음절	충남대학, 남대학교	2
5음절	충남대학교	1

표 1에서 보는 바와 같이 “충남대학교”라는 단어는 1음절부터 5음절까지 모든 경우의 수에 따라 구분되고, 이 단어가 다른 데이터의 출현회수에 따라 의미있는 단어와 무의미한 단어를 구분하게 된다. 예를 들어 “충남”이나 “대학”, “대학교”는 자주 출현하는 반면, “남대”, “남대학” 등은 출현 빈도가 적기 때문에 단어로 보기 어려울 것으로 판단된다. N음절의 단어를 분석하면 
∑_(k=1)^n▒k  =  (n(n+1))/2
과 같다. 위의 “충남대학교”는 5음절이기 때문에 5 * 6 / 2 = 15개가 된다.
	데이터 시각화
데이터 시각화는 MS-Excel의 차트 만들기와 같이 표로 되어 있는 자료를 시각적으로 표현함으로써 데이터를 직관적으로 파악하기 위한 방법이다. 웹에서는 구글차트나 D3.JS와 같은 다양한 시각적인 방법들이 활용되고 있다. 본 논문에서 다루는 데이터 분포는 엑셀, 구글차트 등에서 제공하는 파이차트나 막대 그래프 등이 활용되고, 논어 등장하는 데이터의 관계를 파악하기 위해서는 D3.JS의 네트워크 다이어그램이 사용될 수 있다.
 
그림 1. D3js.org의 네트워크 다이어그램 예제
그림 1에서 원으로 표시된 자료를 노드(node)라 하고 일반적인 데이터에 해당한다. 논어의 분석에서는 1음절~4음절어가 해당하고 원 대신 텍스트를 사용할 수 있다. 노드와 노드를 연결하는 직선은 링크(link)라 하고 두 노드 사이의 관계를 나타낸다. 예를 표 1에 사용된 자료를 활용해 예를 들면 “충”, “남”, “충남” 등은 노드에 해당하고 “충”-“충남”은 음절확장이 가능한 관계이므로 직선으로 연결할 수 있다.
	논어의 엔그램 분석
한학 입문자를 위해 필수 과정인 논어의 학습 효과적으로 하기 위한 한자 외우는 순서나 학습할 장의 순서를 데이터에 기반해 검증하는 간단한 시도를 엔그램 분석으로 시도하고, 이 결과를 시각화할 수 있다. 이를 위해 PHP 기반의 웹 프로그래밍과 검증을 위해 파이썬(Python)을 혼용하여 데이터를 추출하였다.
분석에 앞서 논어 전문을 분석하였는데 여기서 전문의 범위를 명확히 할 필요가 있다. 본 논문에서 다루는 전문의 범위란 ‘學而第一’과 같은 제목을 뺀 본문을 말하며, 제목을 뺀 것과 들어간 것에 대해 분석했을 때 상위항목의 차이가 없기 때문이다. 
어떤 자료를 기초 데이터로 사용했는가 따라 구두점, 쉼표, 물음표, 또는 서적을 표시하는 기호등이 다르다. 이를 위해 데이터의 전처리 과정이 필수이다. 전처리 과정은 정규식(Regular Expression)을 통해 불필요한 한문 텍스트와 공백을 제외한 모든 기호를 제거하여 문장의 공백 단위로 엔그램을 분석을 시도하였다.
한자어나 논어에 등장하는 어휘는 5음절어가 중복되는 경우는 없거나 무의미하다. 논어에 몇 글자가 사용되었는지를 위해 유니그램(엔그램 분석 중 1음절어 분석, uni-gram), 단어를 찾을 수 있는 가능성이 높은 바이그램(엔그램 분석 중 2음절어 분석, bi-gram), 3음절어를 분석하는 트라이그램(tri-gram), 4음절어를 분석하는 4-그램만을 대상으로 한다. 본 논문에서는 엔그램을 이용한 데이터 분석의 관점에서 기술하기 때문에 3음절까지만 기술하도록 한다.
3.1 1음절 분석
1음절은 논어에 사용된 각 낱글자가 얼마나 사용되었는지, 모든 글자의 총 수가 얼마인지를 파악하는 기초 자료이다. 1음절어는 2음절어로 확장해 시각화하는데 활용되기도 한다. 즉 “충”과 “효” 각 두 글자가 있어야 “충효”라는 글자를 만들 수 있다.
 
그림 2. 논어의 엔그램 분석 화면
그림 2는 논어의 엔그램 분석을 시도하는 개발한 프로그램의 화면을 보이고 있다. 그림 2에서 1음절어 분석을 통해 논어에 사용된 모든 글자 수는 15,965개 이고, 그 중 1,359개의 고유 글자의 조합으로 구성된다. 즉 이 말은 1,359글자만 알면 논어를 공부할 수 있음을 의미한다. 그런데 1,300여 글자 중 1회만 출현하는 글자는 약 1/3 (35.4%)을 차지한다. 즉 표면적으로는 800여 글자만 알면 논어를 학습하는데 큰 문제가 없음을 데이터로 확인할 수 있다.
 
그림 3. 글자별 출현 빈도
그림 3은 논어에 출현하는 모든 한자에 대해 글자별 출현 빈도를 도넛 차트로 표현한 그림이다. 이 그림에서 1회만 출현한 글자가 1/3 이상임을 확인할 수 있고, 1~3회는 60%에 해당한다. 즉 500여 글자만 알면 논어를 학습할 준비가 되었다고 판단할 수 있는 결과이다.
1음절 분석결과의 상위 한자들을 보면 1, 2위인 ‘子’, 曰’ 가 압도적으로 많다는 것을 확인할 수 있다. 이를 통해 알 수 있는 점은  첫째, 2그램 분석에서도 나올 단어인 "子曰"이 많다는 것을 증명하는 것으로 논어는 공자의 말씀으로 이루어져 있다는 것을 증명하는 셈이다. 여기서 유의할 점은 "子曰"은 "曾子曰"의 일부이기도 하다는 점이다.
다음으로 많이 등장하는 상위 10개는 그림 4에서 보는 바와 같이 ‘之, 不, 也, 而, 以’처럼 문장에서 어조사 및 접속사로써의 기능이 많이 쓰임을 알 수 있고 ‘其, 人, 者’ 처럼 문장속에서 지칭하는 대명사의 역할을 하는 음절의 출현이 많았음을 알 수 있는 것이다.
 
그림 4. 1음절어 상위 10개 한자의 분포

3.2 2음절어 분석
두번째 분석방법에서는 2음절로 된 유의미한 단어가 무엇이 있는지 살펴볼 수 있다. 1음절 분석에서 보았던 것처럼 ‘子曰’이 454번 등장해 단연 1위임을 알 수 있고, 논어가 공자의 말씀으로 이루어져 있다는 사실이 더 분명해졌다. 여기에서도 “증자왈”도 포함하기 때문에 실제 “공자왈”에 해당하는 “자왈”과 구분하여야 한다. 이는 3음절 분석과 다르게 정규식으로 구분할 수 있는데 공백문자 또는 단어의 첫글자에 “자왈”은 공자를 의미하지만 “다른 한자+자왈”은 공자가 아니다.  정규식을 이용해 “자왈”로 시작하는 단어의 추출은 다음의 두 가지 방법으로 해결할 수 있다.
	^[孔]?子[對]?曰

“^”는 정규식에서 처음을 나타내는 기호이고, [孔]?는 孔이 0 또는 1회 출현, [對]?는 對가 0 또는 1회 출현을 의미한다. 즉 위 정규식은 “자왈”, “공자왈”, “자대왈”, “공자대왈”을 모두 찾아주는 식이다. 이를 전처리과정이나 프로그램으로 확인할 수 있다.
우리가 찾는 공자님 말씀인 “子曰”은 398회 등장한다. 논어에서의 '子曰’은 ‘선생님께서 말씀하시기를’이란 뜻으로 모두 공자를 지칭하기 때문에 실제 공자의 말씀으로 이루어진 것으로 판단할 수 있다. 2위는 107회 등장한 ‘君子’인데 이 결과를 통해 논어란 공자가 ‘君子’에 대한 덕목에 대한 말씀의 기록으로 단순화해 요약할 수 있다. 이를 데이터의 정량적 분석을 통해 검증하였다. 
 2음절 분석에서 또 무엇을 찾아볼 수 있을까? 우선 10회 이상 출현하는 한자가 총101개로 의미가 있을 것으로 예상된다. 이중에서 상위 몇개만 뽑아 살펴보도록 한다.
그림 5에서 보는 바와 같이 상위 단어들을 보면, 孔子(69), 子路(47), 子貢(44), 子夏(23), 子張(23), 曾子(17), 顔淵(15)와 같은 결과를 확인할 수 있는데, 이는 모두 인물이다. 이 인물들을 요약하면 다음과 같이 두 개로 정리할 수 있다.
첫째, 실제 데이터를 통해 ‘孔子’라는 단어가 69회 등장해 2음절중 4위를 차지하고 있음으로 보아 ‘子曰’의 ‘子’가 ‘孔子’를 가리킨다는 것이 많음을 데이터검증으로 유추가 가능해진 것이다.  
 
그림 5. 2음절어 분포 상위 6개
둘쨰, 공자 외 다른 인물들은 공자의 제자를 가리킨다는 것을 알 수 있다. 논어는 공자의 말씀을 제자들과 나눈 것이라고 하는데 그 중 공문십이철 이 많이 등장한다는 것을 확인해 논어에서 제자들의 존재를 데이터로 확인할 수 있다. 하지만 데이터로만으로 2음절어에 등장하는 인물이 논어에 출현하는 인물의 출현빈도와 일치하지 않을 수 있다. 왜냐하면 각 제자들의 이름은 때에 따라 다르게 불리기 때문이다. 예를 들어 안회(顔回)는 성이 顔, 이름이 回, 자가 子淵이며 논어에서 안회를 지칭하는 말은 안회(顔回), 안연(顔淵), 회(回) 이렇게 세가지로 쓰일 수 있기 때문이다.
 결론적으로 큰 데이터지표를 보자면 실제로 孔子(공자)가 많이 등장했다는 것과 공자가 언급했던 제자들의 이름이 자주 2음절 단어로 논어에서 언급되었다는 사실을 확인할 수 있었다. 표면적인 등장인물의 분포는 그림 6에서 확인할 수 있다.
 
그림 6. 가장 많이 등장하는 인물 분포
3.3 3음절어 분석
3음절에서는 인물과 관련된 사실들을 더 자세히 분석할 수 있고, 더 나아가 문법적인 부분도 찾아볼 수 있었다.  본 절에서는 인물 관점과 문법적인 관점의 두 가지 측면에서 살펴보았다.
3.3.1 인물
논어에 등장하는 인물은 크게 공자와 제자로 구분할 수 있다.
첫째, ‘子曰 ‘이 실제로 공자를 지칭하는가? 이다. ‘N子曰’ 구조는 총 56번이며 ‘孔子’ 34번, ‘曾子’ 13번, ‘有子’ 3번, 夫子 2번, 弟子 2번, 康子 1번, 孟子 1번 이다.(그림5) 인물에 관해서는 역시 ‘孔子曰’이 34번으로 제일 많이 등장하며 공자가 말한 말씀이 많다는 것을 증명했다. 2음절어의 ‘子曰’은 454번이 나왔지만 398번이 앞서 말한 2음절 분석을 통해 공자임을 증명했고 나머지 56번 중에 후순위에 나올 ‘曾子曰’와 같은 구조가 존재하기 때문에 앞서 제시한 2음절어의 ‘子曰’이 모두 공자를 가리키진 않는 것이다.  또한 3음절 상위 중 孔子對가 11번 등장하며 ‘曰’뿐만 아니라 말하는 음절은 더 많이 분석이 가능하다. 이부분은 후에 4음절에서 분석에서 자세히 설명하겠다.
 
그림 7. N子曰 구조

둘째, 공자의 제자들 중 상위 인물들의 등장을 살펴보겠다. (그림6)은 3음절 상위분석결과 중에 인물의 이름 뒤에 붙는 ‘曰’과 ‘問’ 두가지(云이나 기타 제외)를 가지고 계산한 수치이다. 데이터를 설명하기전에 분명 ‘2음절 분석에서는 자로가 자공보다 많이 등장했는데 왜 대화는 더 적게 나올까’ 라는 의문을 갖는 사람도 있을 것이다. 이부분에 대해서 짚고 넘어가자면 데이터 분석은 표면적 분석으로 글의 내재되어 있는 모든 면을 정확하게 분석하지 못하는 한계가 분명 존재한다. 그리고 앞서 설명한 2음절과 지금의 3음절에서 인물의 등장 빈도수는 상위 몇명을 추려 보여주고 있는데 데이터의 요지는 인물들의 순위를 가리기 위해서가 아니라 ‘이러한 인물들이 자주 등장했다’ 라는 유의미한 결과로 보기 위함이라는 사실을 인지해야 한다.
 먼저 子貢曰(38번)을 보자. 앞서 2음절 등장인물에서도 상위권이었던 자공은 공자의 공문 십철()의 제자 중 한명으로 뛰어난 언변과 정치적 수완으로 부유했으며 공자를 경제적으로 많이 도와주던 인물이다. 훗날 공자가 세상을 뜨자 다른 제자들은 3년상을 치렀지만 자공만이 6년상을 치렀을 정도로 충직한 제자로도 불린다. 데이터 검증을 통해 공자가 자공과 많은 대화를 나눴다는 것을 알 수 있고 자공이 공자의 충직한 제자였으며 둘의 관계가 깊었다는 사실에 대한 통계적근거로 사용할 수 있다. 인물 분석을 통해 ‘자공’ 이외에도 ‘자로’ ‘자장’ ‘자하’ ‘증자’  공자가 제자들과 대화를 많이 했음을 검증하
 
그림 8. 3음절 인물 상위

3.3.2 문법

3.4 챗GPT와의 결과 비교
최근 생성형 AI의 대표 주자인 챗GPT가 다양한 분야의 학문 연구에 활용되고 있다. 하지만 생성형 AI는 확률 분포 기반의 정보를 추출하기 때문에 같은 질문에 매번 다른 답을 하는 문제가 있다. 또 정확하지 않은 지식에 대해서도 무조건 답을 하려는 할루시네이션 현상을 피할 수 없다. 이를 챗GPT의 논어에 대한 질문으로 확인할 수 있다.
“논어에 등장하는 어휘 중 2음절어 상위 10개의 목록을 요청”하는 질문에 대해 챗GPT의 결과가 그림 9에 있다.
 
그림 9. 챗GPT의 응답 결과
같은 질문을 실제 분석한 그림 5와 전혀 다른 결과를 보여주고 있다. 이는 챗GPT가 다양한 분야에 활용은 되고 있으나 한문학 분야에 바로 사용하기에는 문제가 있음을 단적으로 보여주는 예이다. 본 논문에서 다양한 기술을 이용해 한문학 자료를 분석하는 것이 유용한 것은 사실이지만 직접 통계분석을 시도해야 하는 당위성이기도 하다.
	데이터 시각화
지금까지 엔그램 분석의 결과를 도넛차트나 막대그래프 형태로 확인하였으나, 논어에 등장하는 텍스트를 시각적으로 확인하는 절차는 음절별 데이터 확장을 JSON 형태의 파일로 저장한 후, JSON 데이터를 활용해 관계 그래프(네트워크 다이어그램)으로 표현하는 방법이다. 이를 위해 관련 연구에서 살펴본 JSON 데이터가 필요한데, 모든 음절을 시각화하면 1회만 출현하는 글자까지 표현하기 떄문에 의미도 없고, 시스템에 부담을 야기한다. 이를 위해 5회 이상 출현한 글자에 대해 JSON으로 추출한 결과가 다음과 같다.
{
    "nodes": [
        {   "id": "子",   "total": 972},
        {   "id": "曰",   "total": 759},
        {   "id": "之",   "total": 613},
        {   "id": "不",   "total": 588},
        {   "id": "也",   "total": 534},
               …
{   "id": "如之何其", "total": 5 }
    ],
    "links": [
        {.   "source": "子",   "target": "子曰",    "title": "子曰",  "weight": 454 },
        {.   "source": "曰",   "target": "子曰",    "title": "子曰",  "weight": 454 },
        {.   "source": "君",   "target": "君子",    "title": "君子",  "weight": 107 },
…
{   "source": "如之何",  "target": "如之何其",  "title": "如之何其",  "weight": 5},
        {   "source": "其",  "target": "如之何其",  "title": "如之何其",  "weight": 5}
    ]
}
그림 10. 시각화를 위한 논어 데이터의 JSON 파일 형태

이 결과는 일반적으로 D3JS를 활용해 네트워크 다이어그램으로 표현한다. 그런데 충남대학교 한문학과에서 JSON 파일만 입력되면 자동으로 네트워크 다이어그램으로 시각화하는 도구가 이미 만들어져 있어, 이를 활용해 결과를 확인할 수 있다.
 
그림 11. 논어의 네트워크 다이어그램 시각화 자료
그림 10은 생성된 JSON파일을 이용해 네트워크 다이어그램으로 표현해 시각화한 결과로 최소 5회 이상 출현하는 텍스트에 대한 결과이다. 노드의 색의 농도나 링크의 두께 등을 이용해 데이터의 분포를 직관적으로 확인할 수 있다.
그림 11은 3음절어의 분포를 워드 클라우드로 표현한 모습으로, 출현빈도가 높은 어휘는 크게 표시되어 직관적으로 분포를 확인할 수 있는 또 다른 형태의 시각화 결과를 보여주고 있다.
 
그림 12. 3음절어의 워드클라우드 결과
	결론 및 향후 연구 과제

